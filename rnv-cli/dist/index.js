var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"Common",{enumerable:true,get:function get(){return _common.default;}});Object.defineProperty(exports,"Runner",{enumerable:true,get:function get(){return _runner.default;}});Object.defineProperty(exports,"App",{enumerable:true,get:function get(){return _app.default;}});Object.defineProperty(exports,"Platform",{enumerable:true,get:function get(){return _platform.default;}});Object.defineProperty(exports,"Target",{enumerable:true,get:function get(){return _target.default;}});Object.defineProperty(exports,"Constants",{enumerable:true,get:function get(){return _constants.default;}});Object.defineProperty(exports,"Exec",{enumerable:true,get:function get(){return _exec.default;}});Object.defineProperty(exports,"FileUtils",{enumerable:true,get:function get(){return _fileutils.default;}});exports.default=void 0;var _chalk=_interopRequireDefault(require("chalk"));var _path=_interopRequireDefault(require("path"));var _shelljs=_interopRequireDefault(require("shelljs"));var _common=_interopRequireWildcard(require("./common"));var _runner=_interopRequireDefault(require("./cli/runner"));var _app=_interopRequireDefault(require("./cli/app"));var _platform=_interopRequireDefault(require("./cli/platform"));var _hooks=_interopRequireDefault(require("./cli/hooks"));var _target=_interopRequireDefault(require("./cli/target"));var _linker=_interopRequireDefault(require("./cli/linker"));var _plugin=_interopRequireDefault(require("./cli/plugin"));var _constants=_interopRequireDefault(require("./constants"));var _exec=_interopRequireDefault(require("./exec"));var _fileutils=_interopRequireDefault(require("./fileutils"));var commands={start:_runner.default,build:_runner.default,export:_runner.default,app:_app.default,link:_linker.default,platform:_platform.default,run:_runner.default,package:_runner.default,deploy:_runner.default,target:_target.default,plugin:_plugin.default,log:_runner.default,hooks:_hooks.default};var run=function run(cmd,subCmd,program,process){(0,_common.initializeBuilder)(cmd,subCmd,process,program).then(function(v){if(commands[cmd]){commands[cmd](v).then(function(){return(0,_common.logComplete)(true);}).catch(function(e){return(0,_common.logError)(e,true);});}else if(program.help){var cmdsString='';for(var key in commands){cmdsString+="rnv "+key+"\n";}console.log("\n"+_chalk.default.bold.white('COMMANDS:')+"\n\n"+cmdsString+"\n\n"+_chalk.default.bold.white('OPTIONS:')+"\n\n'-i, --info', 'Show full debug info'\n'-u, --update', 'Force update dependencies (iOS only)'\n'-p, --platform <value>', 'Select specific platform' // <ios|android|web|...>\n'-c, --appConfigID <value>', 'Select specific appConfigID' // <ios|android|web|...>\n'-t, --target <value>', 'Select specific simulator' // <.....>\n'-d, --device [value]', 'Select connected device'\n'-s, --scheme <value>', 'Select build scheme' // <Debug | Release>\n'-f, --filter <value>', 'Filter Value'\n'-l, --list', 'Return list of items related to command' // <alpha|beta|prod>\n'-r, --reset', 'Also perform reset'\n'-b, --blueprint', 'Blueprint for targets'\n'-h, --host <value>', 'Custom Host IP'\n'-x, --exeMethod <value>', 'Executable method in buildHooks'\n'-P, --port <value>', 'Custom Port'\n'-H, --help', 'Help'\n                ");(0,_common.logComplete)(true);}else{(0,_common.logError)("Command "+_chalk.default.white(cmd)+" is not supported by ReNativeCLI. run "+_chalk.default.white('rnv')+" for help",true);}}).catch(function(e){return(0,_common.logError)(e,true);});};var _default={run:run};exports.default=_default;